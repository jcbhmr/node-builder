name: Build Node.js

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: "23.8.0"

jobs:
  build-linux:
    strategy:
      fail-fast: true
      matrix:
        include:
          - { platform: linux, arch: x64, zig-target: x86_64-linux-gnu.2.28, name: linux-x64 }
          - { platform: linux, arch: arm64, zig-target: aarch64-linux-gnu.2.28, name: linux-arm64 }
          - { platform: linux, arch: x64, zig-target: x86_64-linux-musl, name: linux-x64-musl }
          - { platform: linux, arch: arm64, zig-target: aarch64-linux-musl, name: linux-arm64-musl }
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: nodejs/node
          ref: v${{ env.NODE_VERSION }}
      - uses: mlugg/setup-zig@v1
      - run: |
          mkdir -p ~/.local/bin
          echo 'exec zig ar "$@"' > ~/.local/bin/zig-ar
          echo 'exec zig ranlib "$@"' > ~/.local/bin/zig-ranlib
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
      - env:
          ASM: zig cc -target ${{ matrix.zig-target }}
          CC: zig cc -target ${{ matrix.zig-target }}
          CXX: zig c++ -target ${{ matrix.zig-target }}
          AR: zig-ar
          RANLIB: zig-ranlib
        run: ./configure --shared ${{ matrix.arch == 'arm64' && '--with-arm-float-abi hard --with-arm-fpu neon' || '' }}
      - run: make -j$(nproc)
      - uses: actions/upload-artifact@v4
        with:
          name: node-${{ matrix.name }}
          path: out/Release

  build-macos:
    strategy:
      fail-fast: true
      matrix:
        include:
          - { os: macos-13, name: darwin-x64 }
          - { os: macos-latest, name: darwin-arm64 }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: nodejs/node
          ref: v${{ env.NODE_VERSION }}
      - run: ./configure --shared
      - run: make -j$(nproc)
      - uses: actions/upload-artifact@v4
        with:
          name: node-${{ matrix.name }}
          path: out/Release

  build-win32:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: nodejs/node
          ref: v${{ env.NODE_VERSION }}
      - run: ./vcbuild.bat dll openssl-no-asm
      - uses: actions/upload-artifact@v4
        with:
          name: node-win32-x64
          path: out/Release
